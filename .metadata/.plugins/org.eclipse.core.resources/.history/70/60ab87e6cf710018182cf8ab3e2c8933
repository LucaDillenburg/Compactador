package compactador;

import java.io.File;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.io.RandomAccessFile;
import java.util.Arrays;

import compactadorArquivo.*;

public class Compactador
{
	//compactar
	public static void compactar(File arquivo) throws Exception
	{
		if (arquivo == null)
			throw new FileNotFoundException("Arquivo nulo");
		
		if(!arquivo.isDirectory())
		{
			CompactadorArquivo compactadorArq = new CompactadorArquivo();
			compactadorArq.compactar(arquivo);
		}else
		{
			Compactador.compactarAux(arquivo);
		}
	}
	
	public static void compactar(String nomeArquivo) throws Exception
	{
		if(!new File(nomeArquivo).exists())
			throw new FileNotFoundException("Arquivo inexistente!");

		Compactador.compactar(new File(nomeArquivo));
	}
	
	protected static void compactarAux(File arquivo)
	{
		if(!arquivo.isDirectory())
		{
			CompactadorArquivo compactadorArq = new CompactadorArquivo();
			
			try
			{
				compactadorArq.compactar(arquivo);
			}catch (Exception e) {e.printStackTrace();}
		}else
		{
			for (final File arq : arquivo.listFiles())
			{
				Compactador.compactarAux(arq);
		    }
		}
	}
	
	
	//descompactar
	public static String descompactar(File arquivo) throws Exception
	{
		if (arquivo == null)
			throw new FileNotFoundException("Arquivo nulo");
		
		CompactadorArquivo descompactador = new CompactadorArquivo();
		return descompactador.descompactar(arquivo);
	}
	
	public static String descompactar(String nomeArquivo) throws Exception
	{
		if(!new File(nomeArquivo).exists())
			throw new FileNotFoundException("Arquivo inexistente!");

		return Compactador.descompactar(new File(nomeArquivo));
	}
}